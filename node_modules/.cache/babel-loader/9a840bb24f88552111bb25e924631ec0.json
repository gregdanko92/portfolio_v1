{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVar;\nvar _index = require(\"./generated/index.js\");\nvar _index2 = require(\"../constants/index.js\");\nfunction isVar(node) {\n  return (0, _index.isVariableDeclaration)(node, {\n    kind: \"var\"\n  }) && !node[_index2.BLOCK_SCOPED_SYMBOL];\n}","map":{"version":3,"sources":["../../src/validators/isVar.ts"],"names":["isVar","node","kind","BLOCK_SCOPED_SYMBOL"],"mappings":";;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAMe,SAASA,KAAKA,CAACC,IAAY,EAAW;EACnD,OACE,CAAA,CAAA,EAAA,MAAA,CAAA,qBAAqB,EAACA,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAC,IAC5C,CAEED,IAAI,CAACE,OAAAA,CAAAA,mBAAmB,CACzB;AAEL","sourcesContent":["import { isVariableDeclaration } from \"./generated/index.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node, { kind: \"var\" }) &&\n    !(\n      // @ts-expect-error document private properties\n      node[BLOCK_SCOPED_SYMBOL]\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"script"}