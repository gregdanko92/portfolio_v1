{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WHILE_TYPES = exports.USERWHITESPACABLE_TYPES = exports.UNARYLIKE_TYPES = exports.TYPESCRIPT_TYPES = exports.TSTYPE_TYPES = exports.TSTYPEELEMENT_TYPES = exports.TSENTITYNAME_TYPES = exports.TSBASETYPE_TYPES = exports.TERMINATORLESS_TYPES = exports.STATEMENT_TYPES = exports.STANDARDIZED_TYPES = exports.SCOPABLE_TYPES = exports.PUREISH_TYPES = exports.PROPERTY_TYPES = exports.PRIVATE_TYPES = exports.PATTERN_TYPES = exports.PATTERNLIKE_TYPES = exports.OBJECTMEMBER_TYPES = exports.MODULESPECIFIER_TYPES = exports.MODULEDECLARATION_TYPES = exports.MISCELLANEOUS_TYPES = exports.METHOD_TYPES = exports.LVAL_TYPES = exports.LOOP_TYPES = exports.LITERAL_TYPES = exports.JSX_TYPES = exports.IMPORTOREXPORTDECLARATION_TYPES = exports.IMMUTABLE_TYPES = exports.FUNCTION_TYPES = exports.FUNCTIONPARENT_TYPES = exports.FOR_TYPES = exports.FORXSTATEMENT_TYPES = exports.FLOW_TYPES = exports.FLOWTYPE_TYPES = exports.FLOWPREDICATE_TYPES = exports.FLOWDECLARATION_TYPES = exports.FLOWBASEANNOTATION_TYPES = exports.EXPRESSION_TYPES = exports.EXPRESSIONWRAPPER_TYPES = exports.EXPORTDECLARATION_TYPES = exports.ENUMMEMBER_TYPES = exports.ENUMBODY_TYPES = exports.DECLARATION_TYPES = exports.CONDITIONAL_TYPES = exports.COMPLETIONSTATEMENT_TYPES = exports.CLASS_TYPES = exports.BLOCK_TYPES = exports.BLOCKPARENT_TYPES = exports.BINARY_TYPES = exports.ACCESSOR_TYPES = void 0;\nvar _index = require(\"../../definitions/index.js\");\nconst STANDARDIZED_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexports.STANDARDIZED_TYPES = STANDARDIZED_TYPES;\nconst EXPRESSION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Expression\"];\nexports.EXPRESSION_TYPES = EXPRESSION_TYPES;\nconst BINARY_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Binary\"];\nexports.BINARY_TYPES = BINARY_TYPES;\nconst SCOPABLE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexports.SCOPABLE_TYPES = SCOPABLE_TYPES;\nconst BLOCKPARENT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexports.BLOCKPARENT_TYPES = BLOCKPARENT_TYPES;\nconst BLOCK_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Block\"];\nexports.BLOCK_TYPES = BLOCK_TYPES;\nconst STATEMENT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Statement\"];\nexports.STATEMENT_TYPES = STATEMENT_TYPES;\nconst TERMINATORLESS_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexports.TERMINATORLESS_TYPES = TERMINATORLESS_TYPES;\nconst COMPLETIONSTATEMENT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexports.COMPLETIONSTATEMENT_TYPES = COMPLETIONSTATEMENT_TYPES;\nconst CONDITIONAL_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexports.CONDITIONAL_TYPES = CONDITIONAL_TYPES;\nconst LOOP_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Loop\"];\nexports.LOOP_TYPES = LOOP_TYPES;\nconst WHILE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"While\"];\nexports.WHILE_TYPES = WHILE_TYPES;\nconst EXPRESSIONWRAPPER_TYPES = _index.FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexports.EXPRESSIONWRAPPER_TYPES = EXPRESSIONWRAPPER_TYPES;\nconst FOR_TYPES = _index.FLIPPED_ALIAS_KEYS[\"For\"];\nexports.FOR_TYPES = FOR_TYPES;\nconst FORXSTATEMENT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexports.FORXSTATEMENT_TYPES = FORXSTATEMENT_TYPES;\nconst FUNCTION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Function\"];\nexports.FUNCTION_TYPES = FUNCTION_TYPES;\nconst FUNCTIONPARENT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexports.FUNCTIONPARENT_TYPES = FUNCTIONPARENT_TYPES;\nconst PUREISH_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexports.PUREISH_TYPES = PUREISH_TYPES;\nconst DECLARATION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexports.DECLARATION_TYPES = DECLARATION_TYPES;\nconst PATTERNLIKE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexports.PATTERNLIKE_TYPES = PATTERNLIKE_TYPES;\nconst LVAL_TYPES = _index.FLIPPED_ALIAS_KEYS[\"LVal\"];\nexports.LVAL_TYPES = LVAL_TYPES;\nconst TSENTITYNAME_TYPES = _index.FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexports.TSENTITYNAME_TYPES = TSENTITYNAME_TYPES;\nconst LITERAL_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Literal\"];\nexports.LITERAL_TYPES = LITERAL_TYPES;\nconst IMMUTABLE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexports.IMMUTABLE_TYPES = IMMUTABLE_TYPES;\nconst USERWHITESPACABLE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexports.USERWHITESPACABLE_TYPES = USERWHITESPACABLE_TYPES;\nconst METHOD_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Method\"];\nexports.METHOD_TYPES = METHOD_TYPES;\nconst OBJECTMEMBER_TYPES = _index.FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexports.OBJECTMEMBER_TYPES = OBJECTMEMBER_TYPES;\nconst PROPERTY_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Property\"];\nexports.PROPERTY_TYPES = PROPERTY_TYPES;\nconst UNARYLIKE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexports.UNARYLIKE_TYPES = UNARYLIKE_TYPES;\nconst PATTERN_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexports.PATTERN_TYPES = PATTERN_TYPES;\nconst CLASS_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Class\"];\nexports.CLASS_TYPES = CLASS_TYPES;\nconst IMPORTOREXPORTDECLARATION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"ImportOrExportDeclaration\"];\nexports.IMPORTOREXPORTDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\nconst EXPORTDECLARATION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexports.EXPORTDECLARATION_TYPES = EXPORTDECLARATION_TYPES;\nconst MODULESPECIFIER_TYPES = _index.FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexports.MODULESPECIFIER_TYPES = MODULESPECIFIER_TYPES;\nconst ACCESSOR_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexports.ACCESSOR_TYPES = ACCESSOR_TYPES;\nconst PRIVATE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Private\"];\nexports.PRIVATE_TYPES = PRIVATE_TYPES;\nconst FLOW_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Flow\"];\nexports.FLOW_TYPES = FLOW_TYPES;\nconst FLOWTYPE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexports.FLOWTYPE_TYPES = FLOWTYPE_TYPES;\nconst FLOWBASEANNOTATION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexports.FLOWBASEANNOTATION_TYPES = FLOWBASEANNOTATION_TYPES;\nconst FLOWDECLARATION_TYPES = _index.FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexports.FLOWDECLARATION_TYPES = FLOWDECLARATION_TYPES;\nconst FLOWPREDICATE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexports.FLOWPREDICATE_TYPES = FLOWPREDICATE_TYPES;\nconst ENUMBODY_TYPES = _index.FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexports.ENUMBODY_TYPES = ENUMBODY_TYPES;\nconst ENUMMEMBER_TYPES = _index.FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexports.ENUMMEMBER_TYPES = ENUMMEMBER_TYPES;\nconst JSX_TYPES = _index.FLIPPED_ALIAS_KEYS[\"JSX\"];\nexports.JSX_TYPES = JSX_TYPES;\nconst MISCELLANEOUS_TYPES = _index.FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexports.MISCELLANEOUS_TYPES = MISCELLANEOUS_TYPES;\nconst TYPESCRIPT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexports.TYPESCRIPT_TYPES = TYPESCRIPT_TYPES;\nconst TSTYPEELEMENT_TYPES = _index.FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexports.TSTYPEELEMENT_TYPES = TSTYPEELEMENT_TYPES;\nconst TSTYPE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"TSType\"];\nexports.TSTYPE_TYPES = TSTYPE_TYPES;\nconst TSBASETYPE_TYPES = _index.FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\nexports.TSBASETYPE_TYPES = TSBASETYPE_TYPES;\nconst MODULEDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\nexports.MODULEDECLARATION_TYPES = MODULEDECLARATION_TYPES;","map":{"version":3,"sources":["../../../src/constants/generated/index.ts"],"names":["STANDARDIZED_TYPES","FLIPPED_ALIAS_KEYS","exports","EXPRESSION_TYPES","BINARY_TYPES","SCOPABLE_TYPES","BLOCKPARENT_TYPES","BLOCK_TYPES","STATEMENT_TYPES","TERMINATORLESS_TYPES","COMPLETIONSTATEMENT_TYPES","CONDITIONAL_TYPES","LOOP_TYPES","WHILE_TYPES","EXPRESSIONWRAPPER_TYPES","FOR_TYPES","FORXSTATEMENT_TYPES","FUNCTION_TYPES","FUNCTIONPARENT_TYPES","PUREISH_TYPES","DECLARATION_TYPES","PATTERNLIKE_TYPES","LVAL_TYPES","TSENTITYNAME_TYPES","LITERAL_TYPES","IMMUTABLE_TYPES","USERWHITESPACABLE_TYPES","METHOD_TYPES","OBJECTMEMBER_TYPES","PROPERTY_TYPES","UNARYLIKE_TYPES","PATTERN_TYPES","CLASS_TYPES","IMPORTOREXPORTDECLARATION_TYPES","EXPORTDECLARATION_TYPES","MODULESPECIFIER_TYPES","ACCESSOR_TYPES","PRIVATE_TYPES","FLOW_TYPES","FLOWTYPE_TYPES","FLOWBASEANNOTATION_TYPES","FLOWDECLARATION_TYPES","FLOWPREDICATE_TYPES","ENUMBODY_TYPES","ENUMMEMBER_TYPES","JSX_TYPES","MISCELLANEOUS_TYPES","TYPESCRIPT_TYPES","TSTYPEELEMENT_TYPES","TSTYPE_TYPES","TSBASETYPE_TYPES","MODULEDECLARATION_TYPES"],"mappings":"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","sourcesContent":["/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport { FLIPPED_ALIAS_KEYS } from \"../../definitions/index.ts\";\n\nexport const STANDARDIZED_TYPES = FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexport const EXPRESSION_TYPES = FLIPPED_ALIAS_KEYS[\"Expression\"];\nexport const BINARY_TYPES = FLIPPED_ALIAS_KEYS[\"Binary\"];\nexport const SCOPABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexport const BLOCKPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexport const BLOCK_TYPES = FLIPPED_ALIAS_KEYS[\"Block\"];\nexport const STATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"Statement\"];\nexport const TERMINATORLESS_TYPES = FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexport const COMPLETIONSTATEMENT_TYPES =\n  FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexport const CONDITIONAL_TYPES = FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexport const LOOP_TYPES = FLIPPED_ALIAS_KEYS[\"Loop\"];\nexport const WHILE_TYPES = FLIPPED_ALIAS_KEYS[\"While\"];\nexport const EXPRESSIONWRAPPER_TYPES = FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexport const FOR_TYPES = FLIPPED_ALIAS_KEYS[\"For\"];\nexport const FORXSTATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexport const FUNCTION_TYPES = FLIPPED_ALIAS_KEYS[\"Function\"];\nexport const FUNCTIONPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexport const PUREISH_TYPES = FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexport const DECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexport const PATTERNLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexport const LVAL_TYPES = FLIPPED_ALIAS_KEYS[\"LVal\"];\nexport const TSENTITYNAME_TYPES = FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexport const LITERAL_TYPES = FLIPPED_ALIAS_KEYS[\"Literal\"];\nexport const IMMUTABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexport const USERWHITESPACABLE_TYPES = FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexport const METHOD_TYPES = FLIPPED_ALIAS_KEYS[\"Method\"];\nexport const OBJECTMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexport const PROPERTY_TYPES = FLIPPED_ALIAS_KEYS[\"Property\"];\nexport const UNARYLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexport const PATTERN_TYPES = FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexport const CLASS_TYPES = FLIPPED_ALIAS_KEYS[\"Class\"];\nexport const IMPORTOREXPORTDECLARATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"ImportOrExportDeclaration\"];\nexport const EXPORTDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexport const MODULESPECIFIER_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexport const ACCESSOR_TYPES = FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexport const PRIVATE_TYPES = FLIPPED_ALIAS_KEYS[\"Private\"];\nexport const FLOW_TYPES = FLIPPED_ALIAS_KEYS[\"Flow\"];\nexport const FLOWTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexport const FLOWBASEANNOTATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexport const FLOWDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexport const FLOWPREDICATE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexport const ENUMBODY_TYPES = FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexport const ENUMMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexport const JSX_TYPES = FLIPPED_ALIAS_KEYS[\"JSX\"];\nexport const MISCELLANEOUS_TYPES = FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexport const TYPESCRIPT_TYPES = FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexport const TSTYPEELEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexport const TSTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSType\"];\nexport const TSBASETYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\n/**\n * @deprecated migrate to IMPORTOREXPORTDECLARATION_TYPES.\n */\nexport const MODULEDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\n"]},"metadata":{},"sourceType":"script"}