{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toComputedKey;\nvar _index = require(\"../validators/generated/index.js\");\nvar _index2 = require(\"../builders/generated/index.js\");\nfunction toComputedKey(node, key = node.key || node.property) {\n  if (!node.computed && (0, _index.isIdentifier)(key)) key = (0, _index2.stringLiteral)(key.name);\n  return key;\n}","map":{"version":3,"sources":["../../src/converters/toComputedKey.ts"],"names":["toComputedKey","node","key","property","computed","name"],"mappings":";;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;AAGe,SAASA,aAAaA,CACnCC,IAO8B,EAE9BC,GAAiC,GAAGD,IAAI,CAACC,GAAG,IAAID,IAAI,CAACE,QAAQ,EAC7D;EACA,IAAI,CAACF,IAAI,CAACG,QAAQ,IAAI,CAAA,CAAA,EAAA,MAAA,CAAA,YAAY,EAACF,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAA,CAAA,EAAA,OAAA,CAAA,aAAa,EAACA,GAAG,CAACG,IAAI,CAAC;EAEtE,OAAOH,GAAG;AACZ","sourcesContent":["import { isIdentifier } from \"../validators/generated/index.ts\";\nimport { stringLiteral } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"script"}